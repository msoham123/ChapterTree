alert dialog for my events

showDialog(
                              context: context,
                              builder: (BuildContext context){
                                return AlertDialog(
                                  backgroundColor: MyApp.backgroundColor,
                                  title: Center(child: Text('Event Details',style: TextStyle(color: MyApp.blackTextColor))),
                                  content: Container(
                                    height: sizingInformation.myScreenSize.height/1.8,
                                    width: sizingInformation.myScreenSize.width/1.3,
                                    child: Column(
                                      children: <Widget>[
                                        Expanded(
                                          child: ListView.builder(
                                            scrollDirection: Axis.vertical,
                                            itemCount: 10,
                                            itemBuilder: (BuildContext context, int index) {
                                              return eventCard(sizingInformation, false);
                                            },
                                          ),
                                        ),

                                        SizedBox(
                                          height: sizingInformation.myScreenSize.height/130,
                                        ),

                                        Row(
                                          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                                          children: <Widget>[
                                            RaisedButton(
                                              color: Colors.green,
                                              child: Text("View on Map",style: TextStyle(color: MyApp.whiteTextColor)),
                                              shape: RoundedRectangleBorder(
                                                borderRadius: BorderRadius.circular(18),
                                              ),
                                              onPressed: () {
                                                Navigator.push(
                                                  context,
                                                  MaterialPageRoute(
                                                    builder: (context) => myMapScreen(),
                                                  ),
                                                );
                                              },
                                            ),
                                            RaisedButton(
                                              color: Colors.blue,
                                              child: Text("Back",style: TextStyle(color: MyApp.whiteTextColor)),
                                              shape: RoundedRectangleBorder(
                                                borderRadius: BorderRadius.circular(18),
                                              ),
                                              onPressed: () {
                                                Navigator.pop(context);
                                              },
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                );
                              }
                          );













 import 'package:flutter/material.dart';
 import 'package:mobile_app_dev/UI/base_widget.dart';
 import 'package:cloud_firestore/cloud_firestore.dart';
 import 'package:firebase_auth/firebase_auth.dart';
 import 'package:mobile_app_dev/Services/database.dart';
 import 'package:mobile_app_dev/models/user.dart';

 import '../main.dart';

 FirebaseUser loggedInUser;
 final _firestore = Firestore.instance;
 final _auth = FirebaseAuth.instance;

 class myChapterScreen extends StatefulWidget {
   @override
   _myChapterScreen createState() => _myChapterScreen();
 }

 class _myChapterScreen extends State<myChapterScreen> {
   PageController _pageController;
   FirebaseUser loggedInUser;
   DocumentSnapshot userSnapshot;
   DatabaseService ds = new DatabaseService();
   String chapter = '';

   @override
   void initState() {
     super.initState();
     _pageController = PageController();
     getCurrentUser();
     _populateCurrentUser(loggedInUser);
   }

   @override
   void dispose() {
     _pageController.dispose();
     super.dispose();
   }

   void getCurrentUser() async {
     try {
       final user = await _auth.currentUser();
       if (user != null) {
         loggedInUser = user;
       }
     } catch (e) {
       print(e);
     }
   }


   void _populateCurrentUser(FirebaseUser user) async {
     final FirebaseUser user = await _auth.currentUser();
     final String userUID = user.uid.toString();
     if(user != null) {
       userSnapshot = await ds.getUser(userUID);
     }
     chapter = userSnapshot.data['chapter'].toString();
     print(userSnapshot.data['chapter']);
   }

   @override
   Widget build(BuildContext context) {
     return BaseWidget(builder: (context, sizingInformation) {
       return Scaffold(
         backgroundColor: MyApp.backgroundColor,
         body: StreamBuilder<QuerySnapshot>(
           stream: _firestore
               .collection('fbla_users')
               .where("chapter", isEqualTo: chapter)
               .orderBy('count', descending: true)
               .snapshots(),
           builder: (context, snapshot) {
             if (!snapshot.hasData) return Center(child: CircularProgressIndicator());
             return ListView.builder(
               itemExtent: 80.0,
               itemCount: snapshot.data.documents.length,
               itemBuilder: (context, index) =>
                   _buildListItem(context, snapshot.data.documents[index]),
             );
           },
         ),
       );
     });
   }

   Widget _buildListItem(BuildContext context, DocumentSnapshot document) {
     int initCount  = document['count'];
       return Card(
         color: MyApp.botBarColor,
         child: Center(
           child: GestureDetector(
             onDoubleTap: () {
               document.reference.updateData({'count': document['count'] + 1});
               setState(() {
                 initCount++;
               });
             },
             child: ListTile(
               leading: Image.asset('./assets/images/fbla.png'),
               title: Row(
                 children: <Widget>[
                   Expanded(
                     child: Text(
                       document['full_name'],
                       style: TextStyle(color: MyApp.blackTextColor),
                     ),
                   ),
                   Container(
                     height: 40.0,
                     width: 40.0,
                     decoration: BoxDecoration(
                       borderRadius: BorderRadius.all(Radius.circular(20.0)),
                       color: MyApp.blueGreyColor,
                     ),
                     child: Padding(
                       padding: const EdgeInsets.all(8.0),
                       child: Center(
                         child: Text(
                           initCount.toString(),
                           style: TextStyle(
                             color: MyApp.whiteTextColor,
                             fontSize: 15.0,
                             fontWeight: FontWeight.bold
                           ),
                         ),
                       ),
                     ),
                   )
                 ],
               ),
             ),
           ),
         ),
         elevation: 10.0,
       );
     }
 }
